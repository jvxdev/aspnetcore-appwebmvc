@model Integro.App.ViewModels.FornecedorViewModel

@{
    ViewData["Title"] = "Editar fornecedor";
}

<h1>Editar fornecedor</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Documento" class="control-label"></label>
                <input asp-for="Documento" class="form-control" />
                <span asp-validation-for="Documento" class="text-danger"></span>
            </div>
            <label asp-for="TipoFornecedor"></label>
            <div>
                <input type="radio" value="1" asp-for="TipoFornecedor" checked="@(Model.TipoFornecedor == 1)" /> Pessoa Física
                <input type="radio" value="2" asp-for="TipoFornecedor" checked="@(Model.TipoFornecedor == 2)" /> Pessoa Jurídica
            </div>
            <div>
                &nbsp;
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Ativo" /> @Html.DisplayNameFor(model => model.Ativo)
                </label>
            </div>

            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
            <a asp-action="Index" class="btn btn-secondary">Voltar</a>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
